<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"                 
                    xmlns:local="clr-namespace:CodeGenerater">

    <!--主窗口样式-->
    <!--圆角阴影无按键窗口样式-->
    <ControlTemplate x:Key="BaseComplate" TargetType="{x:Type Window}">
            <Border  BorderThickness="1" CornerRadius="4" x:Name="border" Background="Transparent">
                <Border.Effect>
                    <DropShadowEffect ShadowDepth="0" Opacity="0.5" BlurRadius="6"  Color="#777"/>
                </Border.Effect>
                <Border Background="Transparent"    
                        BorderBrush="Transparent"    
                        CornerRadius="4"
                        BorderThickness="{TemplateBinding BorderThickness}"    
                        Padding="{TemplateBinding Margin}"    
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                    <ContentPresenter />
                </Border>
            </Border>        
    </ControlTemplate>

    <!--设置窗口样式-->
    <Style x:Key="WindowStyle"  TargetType="{x:Type Window}">
        <Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="Background" Value="Transparent"/>        
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="Control.Template" Value="{StaticResource BaseComplate}"/>
    </Style>

    <Style x:Key="menuRadioButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource TextForeground}"></Setter>
        <Setter Property="Padding" Value="0"></Setter>
        <Setter Property="FontSize" Value="{DynamicResource FontSize}"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Height" Value="40"></Setter>
        <Setter Property="SnapsToDevicePixels" Value="true"></Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid x:Name="grid" >
                        <Border 
                            x:Name="border"
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            BorderBrush="{TemplateBinding BorderBrush}"  
                            Height="{TemplateBinding Height}"                             
                            Background="{TemplateBinding Background}" 
                            Width="{TemplateBinding Width}">
                            <TextBlock x:Name="txt" 
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                       Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Content}"
                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                           
                            <!--<ContentPresenter  Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>-->
                        </Border>
                    </Grid>
                    <!--触发器：设置选中状态符号-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background" Value="{DynamicResource myBlue}" TargetName="border"></Setter>
                            <Setter Property="Foreground" Value="White" TargetName="txt"></Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" Value="{DynamicResource myBlue}"></Setter>
                            <Setter Property="Foreground" Value="White" TargetName="txt"></Setter>
                            <Setter Property="Background" Value="{DynamicResource myBlue}" TargetName="border"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="{StaticResource DisableOpacity}" TargetName="grid" ></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type  local:WindowButton}" TargetType="{x:Type  local:WindowButton}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type  local:WindowButton}">
                    <Border Name="border" BorderBrush="{TemplateBinding Control.BorderBrush}" 
                            BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="True" Width="{TemplateBinding FrameworkElement.Width}" 
                            Height="{TemplateBinding FrameworkElement.Height}" Background="{TemplateBinding Control.Background}">
                        <ContentPresenter Name="contentPresenter" 
                                          ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                          ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Focusable="False" 
                                          RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" 
                                          Content="{TemplateBinding ContentControl.Content}" 
                                          HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter TargetName="border" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=MyMoverBrush}" Property="Border.Background" />
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="True">
                            <Setter TargetName="border" Value="{Binding  RelativeSource={RelativeSource Mode=TemplatedParent},Path=MyEnterBrush}" Property="Border.Background" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>